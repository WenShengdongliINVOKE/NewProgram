<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <!-- 上方字体渐变样式-->
    <LinearGradientBrush x:Key="AnimatedForegroundBrush" SpreadMethod="Repeat" StartPoint="0,0" EndPoint="1,0">
        <LinearGradientBrush.Transform>
            <TranslateTransform x:Name="LinearGradientBrushTranslate"/>
        </LinearGradientBrush.Transform>
        <LinearGradientBrush.GradientStops>
            <GradientStop Offset="0.00" Color="Red"/>
            <GradientStop Offset="0.25" Color="Black"/>
            <GradientStop Offset="0.50" Color="Black"/>
            <GradientStop Offset="0.75" Color="SkyBlue"/>
            <GradientStop Offset="1.00" Color="DeepSkyBlue"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <!--TextBlock样式模板-->
    <Style x:Key="AnimatedTextBlockStyle" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{StaticResource AnimatedForegroundBrush}"/>
    </Style>
    <!--Button渐变样式-->
    <Style x:Key="dgButton" TargetType="Button" >
        <Setter Property="FontSize" Value="40"/>
        <Setter Property="Content" Value="按钮"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Background">
            <Setter.Value>
                <!--<RadialGradientBrush>
                <GradientStop Color="#FFC564B8" Offset="0"/>
                <GradientStop Color="#FFF57A7A" Offset="1"/>
            </RadialGradientBrush>-->
                <LinearGradientBrush EndPoint="1,1" StartPoint="0,0">
                    <GradientStop Color="#FFC548" Offset="0"/>
                    <GradientStop Color="#FFF57A7A" Offset="1"/>
                </LinearGradientBrush>
            </Setter.Value>



        </Setter>
    </Style >

    <!--Buttonh样式模板-->
    <ControlTemplate x:Key="buttonTemplate" TargetType="Button" >
        <Border BorderThickness="1" CornerRadius="30" Background="{TemplateBinding Background}">
            <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"/>
        </Border>
        <!--<Grid >
            <Ellipse Name="faceEllipse" Height="50" Width="100" Fill="{TemplateBinding Button.Background}"/>
            <TextBlock Name="txtBlock"  />
        </Grid >-->
        <ControlTemplate.Triggers >
            <Trigger Property="Button.IsMouseOver" Value="True">
                <Setter Property="Button.Background" Value="blue"/>
            </Trigger >
        </ControlTemplate.Triggers >
    </ControlTemplate >

    <!--DataGrid样式-->
    <Style TargetType="DataGrid">
        <!--网格线颜色-->
        <Setter Property="CanUserResizeColumns" Value="false"/>
        <Setter Property="Background" Value="#FFF7EDAD" />
        <Setter Property="BorderBrush" Value="#FFF5F7F5" />
        <Setter Property="Height" Value="10" />
        <Setter Property="HorizontalGridLinesBrush">
            <Setter.Value>
                <SolidColorBrush Color="Red"/>
            </Setter.Value>
        </Setter>
        <Setter Property="VerticalGridLinesBrush">
            <Setter.Value>
                <SolidColorBrush Color="#d6c79b"/>
            </Setter.Value>
        </Setter>
    </Style>

    <!--标题栏样式-->
    <Style TargetType="DataGridColumnHeader">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="MinWidth" Value="0" />
        <Setter Property="MinHeight" Value="48" />
        <Setter Property="Foreground" Value="#323433" />
        <Setter Property="FontSize" Value="14" />

        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="DataGridColumnHeader">
                    <Border x:Name="BackgroundBorder" BorderThickness="0,1,0,1" 
                             BorderBrush="#FFC548" 
                              Width="Auto">
                        <Grid >
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"  />
                            </Grid.ColumnDefinitions>
                            <ContentPresenter  Margin="0,0,0,0" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                            <Path x:Name="SortArrow" Visibility="Collapsed" Data="M0,0 L1,0 0.5,1 z" Stretch="Fill"  Grid.Column="2" Width="8" Height="6" Fill="White" Margin="0,0,50,0" 
                            VerticalAlignment="Center" RenderTransformOrigin="1,1" />
                            <Rectangle Width="1" Fill="#FFC548" HorizontalAlignment="Right" Grid.ColumnSpan="1" />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Height" Value="25"/>
    </Style>
    <!--行样式触发-->
    <!--背景色改变必须先设置cellStyle 因为cellStyle会覆盖rowStyle样式-->
    <Style  TargetType="DataGridRow">
        <Setter Property="Background" Value="Blue" />
        <Setter Property="Height" Value="55"/>
        <Setter Property="Foreground" Value="Black" />
        <Style.Triggers>
            <!--隔行换色-->
            <Trigger Property="AlternationIndex" Value="0" >
                <Setter Property="Background" Value="AliceBlue" />
            </Trigger>
            <Trigger Property="AlternationIndex" Value="1" >
                <Setter Property="Background" Value="AliceBlue" />
            </Trigger>

            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#DC6A75"/>
                <!--<Setter Property="Foreground" Value="White"/>-->
            </Trigger>

            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Foreground" Value="Black"/>
            </Trigger>
        </Style.Triggers>
    </Style>


    <!--单元格样式触发-->
    <Style TargetType="DataGridCell">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="DataGridCell">
                    <TextBlock TextAlignment="Center" VerticalAlignment="Center"  >
                           <ContentPresenter />
                    </TextBlock>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Foreground" Value="Black"/>
            </Trigger>
        </Style.Triggers>

    </Style>



    <!-- WPF按钮动画模板 已弃用 -->
    <Style x:Key="ModernButtonStyle" TargetType="{x:Type Button}">
        <!-- <Setter Property="Background" Value="#FA6E1D" />-->
        <Setter Property="Background" >
            <Setter.Value>
                <LinearGradientBrush EndPoint="1,1" StartPoint="0,0">
                    <GradientStop Color="#FFC548" Offset="0"/>
                    <GradientStop Color="#FFF57A7A" Offset="1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderBrush" Value="Blue"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="Width" Value="200"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border"
                          Background="{TemplateBinding Background}"
                          BorderBrush="{TemplateBinding BorderBrush}"
                          BorderThickness="{TemplateBinding BorderThickness}"
                          CornerRadius="4"
                          RenderTransformOrigin="0.1,0.5">
                        <ContentPresenter VerticalAlignment="Center" 
                                        HorizontalAlignment="Center"
                                        TextElement.Foreground="{TemplateBinding Foreground}"/>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimation Duration="0:0:0.35"
                                          Storyboard.TargetName="border"
                                          Storyboard.TargetProperty="Background.Color"
                                          To="#FFF57A7A"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ColorAnimation Duration="0:0:0.1"
                                          Storyboard.TargetName="border"
                                          Storyboard.TargetProperty="Background.Color"
                                          To="#0D47A1"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

<!--WPF按钮模板-->
    <Style x:Key="ModernButtonStyle1" TargetType="{x:Type Button}">
        <Setter Property="Background" >
            <Setter.Value>
                <LinearGradientBrush EndPoint="1,1" StartPoint="0,0">
                    <GradientStop Color="#FFC548" Offset="0"/>
                    <GradientStop Color="#FFF57A7A" Offset="1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        CornerRadius="4">
                        <!-- 关键修改：添加一个用于颜色动画的矩形 -->
                        <Grid>
                            <Rectangle x:Name="overlayRect" Fill="Transparent" RadiusX="4" RadiusY="4"/>
                            <ContentPresenter VerticalAlignment="Center" 
                                      HorizontalAlignment="Center"
                                      TextElement.Foreground="{TemplateBinding Foreground}"/>
                        </Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <!-- 修改目标为新增的矩形填充颜色 -->
                                        <ColorAnimation Duration="0:0:0.35"
                                          Storyboard.TargetName="overlayRect"
                                          Storyboard.TargetProperty="Fill.Color"
                                          To="#FFF57A7A"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ColorAnimation Duration="0:0:0.1"
                                          Storyboard.TargetName="overlayRect"
                                          Storyboard.TargetProperty="Fill.Color"
                                          To="#880D47A1"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!-- 定义图标动画 -->
    <Storyboard x:Key="IconAnimation" RepeatBehavior="Forever">
        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="StatusIcon" 
                                         Storyboard.TargetProperty="Source">
            <DiscreteObjectKeyFrame KeyTime="0:0:0.3" Value="/Images/icon1.png"/>
            <DiscreteObjectKeyFrame KeyTime="0:0:0.6" Value="/Images/icon2.png"/>
            <DiscreteObjectKeyFrame KeyTime="0:0:0.9" Value="/Images/icon3.png"/>
        </ObjectAnimationUsingKeyFrames>
    </Storyboard>

    <!-- 定义悬停晃动动画 -->
    <Storyboard x:Key="HoverAnimation">
        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Transform" 
                                          Storyboard.TargetProperty="Y">
            <EasingDoubleKeyFrame KeyTime="0:0:0" Value="0"/>
            <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="-3"/>
            <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="2"/>
            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="-2"/>
            <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="1"/>
            <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="0"/>
        </DoubleAnimationUsingKeyFrames>
    </Storyboard>






</ResourceDictionary>

